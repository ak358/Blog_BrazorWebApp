@page "/articles/details"

@inject NavigationManager NavigationManager
@inject Blog_BrazorWebApp.Data.ApplicationDbContext DB
@inject IJSRuntime JSRuntime


<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>Article</h4>
    <hr />
    @if (article is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Title</dt>
            <dd class="col-sm-10">@article.Title</dd>

            <dt class="col-sm-2">Content</dt>

            <dd class="col-sm-10">
                @article.Content
            </dd>

            <dt class="col-sm-2">CreateDate</dt>
            <dd class="col-sm-10">@article.CreateDate</dd>

            <dt class="col-sm-2">UpdateDate</dt>
            <dd class="col-sm-10">@article.UpdateDate</dd>
        </dl>
        @if (HttpContext.User.Identity.IsAuthenticated)
        {
            <div>
                <a href="@($"/articles")">Back to Yout List</a>
            </div>
        }
        <div>
            <a href="@($"/")">Back to ALL Article</a>
        </div>

    }
</div>

@code {
    [CascadingParameter]
    public HttpContext? HttpContext { get; set; }

    Article? article;
    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        article = await DB.Articles.FirstOrDefaultAsync(m => m.Id == Id);

        if (article is null)
        {
            NavigationManager.NavigateTo("notfound");
        }

    }

}
